$("._tab").click(function() {
    let parentBlock = $(this).parents("._tabs-parent")
    let tabId = $(this).attr("data-tab")
    $(parentBlock).find("._tab").removeClass("_active")
    $(this).addClass("_active")
    $(parentBlock).find(".tab-content").removeClass("_active")
    $(parentBlock).find(`.${tabId}`).addClass("_active")
})

$(".m-dropdown__show").click(function() {
    if($(this).parents(".m-dropdown").hasClass("_open")){
        $(".m-dropdown").removeClass("_open")
    } else{
        $(".m-dropdown").removeClass("_open")
        $(this).parents(".m-dropdown").addClass("_open")
    }
})

$( ".m-dropdown input[type='radio']").change(function () {
    let value = $(this).val()
    let parent = $(this).parents(".m-dropdown")
    $(parent).removeClass("_open")
    $(parent).find(".m-dropdown__show span").html(value)
})

$(document).mouseup( function(e){
    let div = $( ".m-dropdown" );
    if ( !div.is(e.target)
        && div.has(e.target).length === 0 ) {
        if($(div).hasClass("_open")){
            $(div).removeClass("_open")
        }
    }
});

$(".favourite-btn,.cart-btn").click(function () {
    $(this).toggleClass("_added")
})

function cartCalc() {
    $('.cartcalc .ccalc-minus').click(function(e) {
        let a = $(this).closest('.cartcalc').find('input').val();
        if (a > 1) {
            let b = +a - 1;
            $(this).closest('.cartcalc').find('input').val(b);
            $(this).closest('.cartcalc').find('input').trigger('change');
        } else {
            $(this).closest('.cartcalc').find('input').val(a);
        }
        e.stopImmediatePropagation()
    });

    $('.cartcalc .ccalc-plus').click(function(e) {
        let a = $(this).closest('.cartcalc').find('input').val();
        let b = +a + 1;
        $(this).closest('.cartcalc').find('input').val(b);
        $(this).closest('.cartcalc').find('input').trigger('change');
        e.stopImmediatePropagation()
    });

}

cartCalc()

$("[data-copy]").click(function () {
    let text = $(this).attr("data-copy")
    let $tmp = $("<textarea>");
    $("body").append($tmp);
    $tmp.val(text).select();
    document.execCommand("copy");
    $tmp.remove();
})

$(".burger").click(function () {
    $(".header").toggleClass("_open")
    $("body").toggleClass("fixed-body")
})

$(".header-search__btn").click(function () {
    $(".header").toggleClass("_open-search")
})

$(document).mouseup( function(e){
    var div = $( ".header-action__search" );
    if ( !div.is(e.target)
        && div.has(e.target).length === 0 ) {
        if($(".header").hasClass("_open-search")){
            $(".header").removeClass("_open-search")
        }
    }
});


function Sliders() {
    let SlidersArray = []

    let sliders = document.querySelectorAll(".slider")
    sliders.forEach((slider,index) => {
        slider.setAttribute("data-slider-id",index)

        SlidersArray[index] = new Swiper(`.slider[data-slider-id="${index}"] .swiper-container`, {
            slidesPerView: "auto",
            spaceBetween: 0,
            watchSlidesProgress: true,
            preventClicks :true,
            a11y: false,
            observer: true,
            observeParents: true,
            observeSlideChildren: true,

            navigation: {
                nextEl: `.slider[data-slider-id="${index}"] .swiper-button-next`,
                prevEl: `.slider[data-slider-id="${index}"] .swiper-button-prev`,
            },
            pagination: {
                el: `.slider[data-slider-id="${index}"] .swiper-pagination`,
                type: 'bullets',
                clickable: true,
            },
            scrollbar: {
                el: `.slider[data-slider-id="${index}"] .swiper-scrollbar`,
                draggable: true,
                snapOnRelease: true,
                dragSize: 'auto',
            },
        })
    })
}

function productSliders() {
    let SlidersArray = []

    let sliders = document.querySelectorAll(".product-slider")
    sliders.forEach((slider,index) => {
        slider.setAttribute("data-slider-id",index)

        SlidersArray[index] = new Swiper(`.product-slider[data-slider-id="${index}"] .product-slider__container`, {
            wrapperClass: "product-slider__wrapper",
            slideClass: "product-slider__slide",
            slidesPerView: "auto",
            spaceBetween: 0,
            watchSlidesProgress: true,
            preventClicks :true,
            a11y: false,
            observer: true,
            observeParents: true,
            observeSlideChildren: true,
            navigation: {
                nextEl: `.product-slider[data-slider-id="${index}"] .swiper-button-next`,
                prevEl: `.product-slider[data-slider-id="${index}"] .swiper-button-prev`,
            },
            scrollbar: {
                el: `.product-slider[data-slider-id="${index}"] .swiper-scrollbar`,
                draggable: true,
                snapOnRelease: true,
                dragSize: 'auto',
            },
        })
    })
}

function nestedSliders() {
    let SlidersArray = []

    let sliders = document.querySelectorAll("._nested-slider")
    sliders.forEach((slider,index) => {
        slider.setAttribute("data-slider-id",index)

        SlidersArray[index] = new Swiper(`._nested-slider[data-slider-id="${index}"] .swiper-container`, {
            slidesPerView: "auto",
            spaceBetween: 0,
            watchSlidesProgress: true,
            preventClicks :true,
            a11y: false,
            observer: true,
            observeParents: true,
            observeSlideChildren: true,
            nested: true,
            pagination: {
                el: `._nested-slider[data-slider-id="${index}"] .swiper-pagination`,
                type: 'bullets',
                clickable: true,
            },
            on: {
                init: function () {
                    let slidesCount = this.slides.length
                    let self = this
                    for (let slide = 0; slide < slidesCount; slide++){
                        $(slider).find(".product-card__pagination").append(`
                        <div data-slide="${slide}" class="product-card__pagination-item"></div>
                        `)
                    }
                    $(document).on('mouseover', `._nested-slider[data-slider-id="${index}"] .product-card__pagination-item`, function(e) {
                        let slideId = +$(this).attr("data-slide")
                        self.slideTo(slideId)
                    })
                },
            },
        })
    })
}

function gallery() {
    let SlidersArray = []

    let sliders = document.querySelectorAll(".gallery")
    sliders.forEach((slider,index) => {
        slider.setAttribute("data-slider-id",index)
        let gallery = {
            mySwiper: {},
            mySwiper2: {}
        }

        gallery.mySwiper = new Swiper(`.gallery[data-slider-id="${index}"] .mySwiper`, {
            spaceBetween: 0,
            slidesPerView: "auto",
            freeMode: true,
            watchSlidesProgress: true,
            direction: "vertical",
            breakpoints: {
                320: {
                    direction: "horizontal",
                },
                992: {
                    direction: "vertical",
                }
            }
        });
        gallery.mySwiper2 = new Swiper(`.gallery[data-slider-id="${index}"] .mySwiper2`, {
            spaceBetween: 0,
            direction: "vertical",
            loop: true,
            navigation: {
                nextEl: `.gallery[data-slider-id="${index}"] .swiper-button-next`,
                prevEl: `.gallery[data-slider-id="${index}"] .swiper-button-prev`,
            },
            thumbs: {
                swiper:  gallery.mySwiper,
            },
            breakpoints: {
                320: {
                    direction: "horizontal",
                },
                992: {
                    direction: "vertical",
                }
            }
        });

        SlidersArray[index] = gallery
    })

}


Sliders()
gallery()
productSliders()
nestedSliders()

$("._filter-toggle").click(function () {
    $("body").toggleClass("fixed-body")
    $("body").toggleClass("_open-filter")
})

$(".filter-item__show").click(function() {
    if(window.innerWidth>992){
        if($(this).parents(".filter-item").hasClass("_open")){
            $(".filter-item").removeClass("_open")
        } else{
            $(".filter-item").removeClass("_open")
            $(this).parents(".filter-item").addClass("_open")
        }
    } else{
        $(this).parents(".filter-item").toggleClass("_open")
        $(this).parents(".filter-item").find(".filter-item__hidden").slideToggle()
    }
})

$(".info-card__show").click(function() {
    $(this).parents(".info-card").toggleClass("_open")
    $(this).parents(".info-card").find(".info-card__hidden").slideToggle()
})

$(document).mouseup( function(e){
    let div = $( ".filter-item" );
    if ( !div.is(e.target)
        && div.has(e.target).length === 0 ) {
        if($(div).hasClass("_open")){
            if(window.innerWidth>992){
                $(div).removeClass("_open")
            }
        }
    }
});

let filterSliders = document.querySelectorAll(".filter-slider")

filterSliders.forEach(slider => {
    const rangeSlider = slider.querySelector(`.range-slider`)
    const rangeInput0 = slider.querySelector(`.range-slider__input1`)
    const rangeInput1 = slider.querySelector(`.range-slider__input2`)
    const rangeInputs = [rangeInput0, rangeInput1]

    let startValue1 = +slider.getAttribute("data-start")
    let startValue2 = +slider.getAttribute("data-start2")
    let min = +slider.getAttribute("data-min")
    let max = +slider.getAttribute("data-max")

    if (rangeSlider) {
        noUiSlider.create(rangeSlider, {
            start: [startValue1, startValue2],
            connect: true,
            step: 1,
            range: {
                'min': min,
                'max': max
            }
        });
    }
    if (rangeSlider) {
        rangeSlider.noUiSlider.on('update', function(values, handle) {
            rangeInputs[handle].value = Math.round(values[handle])
        })
        rangeInputs.forEach((el, index) => {
            el.addEventListener('change', (e) => {
                setRangeSlider(index, e.currentTarget.value)
            })
        })
    }
    const setRangeSlider = (i, value) => {
        let array = [null, null];
        array[i] = value;

        rangeSlider.noUiSlider.set(array);
    };
})

$("._search-field").on("input",function () {
    if($(this).val().length > 0){
        $(".search-form").addClass("_filled")
    } else{
        $(".search-form").removeClass("_filled")
    }
})

$(".search-form__clear").on("click",function () {
    $(".search-form").removeClass("_filled")
    $("._search-field").val('')
})



$(window).on('load resize', function(){

    $(".order-card").each(function (i,el) {
        let prices = $(el).find(".cart-card__prices")
        let title = $(el).find(".cart-card__title")
        let info = $(el).find(".cart-card__content")
        if ($(window).width() <= 576) {
            $(prices).insertAfter(title);
        } else{
            $(prices).insertAfter(info);
        }
    })
});

let fileInput = document.querySelector("[data-upload-id='file-input']")

if(fileInput){
    console.log(fileInput)
    const upload = new FileUploadWithPreview.FileUploadWithPreview('file-input');

    upload.options.multiple = true

    $(document).on('change', '.input-container input', function(e) {
        $(this).parents(".file-input").addClass("_uploaded")
    })

    $(document).on('click', '.image-preview-item-clear', function(e) {
        let count = $(this).parents(".file-input").find(".image-preview-item").length
        if(count === 1){
            $(this).parents(".file-input").removeClass("_uploaded")
        }
    })
}



let body = document.querySelector("body")
let modalTogglers = document.querySelectorAll("[data-modal]")
let modals = document.querySelectorAll(".modal")

modalTogglers.forEach(el => {
    el.onclick = function () {
        let modalId = el.getAttribute("data-modal")
        openModal(modalId)
    }
})

function closeModals() {
    modals.forEach(modal => {
        modal.classList.remove("_active")
        body.classList.remove("fixed-body2")
    })
}

function openModal(modalId) {
    closeModals()
    let modal = document.querySelector(`#${modalId}`)
    let closeButtons = modal.querySelectorAll(`._close-modal`)

    modal.classList.add("_active")
    body.classList.add("fixed-body2")


    closeButtons.forEach(btn => {
        btn.onclick = ()=> {
            modal.classList.remove("_active")
            body.classList.remove("fixed-body2")
        }
    })
}

var getScrollBarSize = (function() {
    var el = window.document.createElement('textarea'), style = {
        'visibility': 'hidden', 'position': 'absolute', 'zIndex': '-2147483647',
        'top': '-1000px', 'left': '-1000px', 'width': '1000px', 'height': '1000px',
        'overflow': 'scroll', 'margin': '0', 'border': '0', 'padding': '0'
    }, support = el.clientWidth !== undefined && el.offsetWidth !== undefined;

    for (var key in style) {
        if (style.hasOwnProperty(key)) {
            el.style[key] = style[key];
        }
    }

    return function() {
        var size = null;
        if (support && window.document.body) {
            window.document.body.appendChild(el);
            size = [el.offsetWidth - el.clientWidth, el.offsetHeight - el.clientHeight];
            window.document.body.removeChild(el);
        }

        document.documentElement.style.setProperty('--scrollWidth', `${size[0]}px`);
        return size;
    };
})();


window.addEventListener('DOMContentLoaded', () => {
    fix100vh();
    window.addEventListener('resize', () => {
        fix100vh();
        getScrollBarSize()
    })

    getScrollBarSize()

})

function fix100vh() {
    let vh = window.innerHeight * 0.01;
    document.documentElement.style.setProperty('--vh', `${vh}px`);
}

//# sourceMappingURL=../sourcemaps/main.min.js.map
